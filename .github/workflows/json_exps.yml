name: "Messing with JSON"

on:
  workflow_dispatch:
    inputs:
      workload:
        required: true
        type: choice
        description: "The workload to use"
        options:
          - test1
          - test2
          - test3

env:
  ENV_CONFIGS: >
    {
      "test1": "This is environment test1!",
      "test2": "This is environment workload_bc!",
      "test3": "This is environment workload_xyz!"
    }

jobs:
  set_env_vars:
    name: Setting stuff up
    runs-on: ubuntu-latest
#    strategy:
#      max-parallel: 6
#      matrix: ${{ fromJson(env.ENV_CONFIGS) }}
#      fail-fast: false
    steps:
#      - id: read-output
#        run: echo "workload = ${{ matrix.env.ENV_CONFIGS.workload }}"
      - id: env-outpt
        run: echo '${{ env.ENV_CONFIGS }}'
      - id: env-outpt-fromJSON
        shell: bash
        run: |
          #JQ_STRING='.${{github.event.inputs.workload}}.workload'
          #echo ${JQ_STRING}
          #set -x
          #echo '${{ fromJson( env.ENV_CONFIGS ) }}'
          #echo '${{ fromJson( env.ENV_CONFIGS ) }}' | jq '.${{github.event.inputs.workload}}.workload'
          #jq -n '$input.' --argjson input '${{env.ENV_CONFIGS}}'
          echo "${{ fromJson( $ENV_CONFIGS ).github.event.inputs.workload }}"
